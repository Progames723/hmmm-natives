name: Build Workflow

on:
  workflow_dispatch:
  push:
    paths:
      - "src/main/java/**"
  pull_request:
    types: [ opened, reopened, synchronize, edited, ready_for_review, review_requested ]
    paths:
      - "src/main/java/**"

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Install cross-compilation toolchains
        run: |
          sudo apt update
          sudo apt install -y --force-yes gcc g++
          sudo apt install -y --force-yes gcc-aarch64-linux-gnu g++-aarch64-linux-gnu libc6-dev-arm64-cross
          sudo apt install -y --force-yes gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf libc6-dev-armhf-cross
          sudo apt install -y --force-yes gcc-riscv64-linux-gnu g++-riscv64-linux-gnu libc6-dev-riscv64-cross
          sudo apt install -y --force-yes mingw-w64 lib32z1 g++-multilib gcc-multilib

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Fix gradle
        run: chmod +x gradlew

      - name: Initialize jnigen
        run: ./gradlew jnigen
      - name: Build natives 
        run: ./gradlew jnigenBuildAllLinux


      - name: Pack artifacts
        run: |
          find .  -name "*.a" -o -name "*.dll" -o -name "*.dylib" -o -name "*.so" | grep "libs" > native-files-list
          zip natives-linux -@ < native-files-list

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          retention-days: 2
          compression-level: 9
          name: natives-linux
          path: natives-linux.zip
  build-mac:
    runs-on: macos-14
    steps:
      - name: Setup Xcode SDK
        run: |
          # See https://github.com/actions/virtual-environments/issues/2557
          sudo mv /Library/Developer/CommandLineTools/SDKs/* /tmp
          sudo mv /Applications/Xcode.app /Applications/Xcode.app.bak
          sudo mv /Applications/Xcode_15.4.0.app /Applications/Xcode.app
          sudo xcode-select -switch /Applications/Xcode.app
          /usr/bin/xcodebuild -version

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Fix gradle
        run: chmod +x gradlew

      - name: Initialize jnigen
        run: ./gradlew jnigen
      - name: Build natives 
        run: ./gradlew jnigenBuildAllMacOsX

      - name: Pack artifacts
        run: |
          find .  -name "*.a" -o -name "*.dll" -o -name "*.dylib" -o -name "*.so" -o -name "*.xcframework" | grep "libs" > native-files-list
          zip natives-mac -@ < native-files-list

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          retention-days: 2
          compression-level: 9
          name: natives-mac
          path: natives-mac.zip
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Add VCVarsall To path
        shell: pwsh
        run: |
          echo "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append


      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Fix gradle
        run: chmod +x gradlew

      - name: Initialize jnigen
        run: ./gradlew jnigen
      - name: Build natives 
        run: ./gradlew jnigenBuildAllWindows

      - name: Choco install Zip
        run: choco install zip

      - name: Pack artifacts
        shell: bash
        run: |
          find .  -name "*.a" -o -name "*.dll" -o -name "*.dylib" -o -name "*.so" | grep "libs" > native-files-list
          zip natives-windows -@ < native-files-list

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          retention-days: 2
          compression-level: 9
          name: natives-windows
          path: natives-windows.zip


  package:
    runs-on: ubuntu-latest
    needs: [build-linux, build-mac, build-windows]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Download Artifacts from linux
        if: success() && ${{needs.build-linux.result}} == 'success'
        uses: actions/download-artifact@v4
        with:
          name: natives-linux.zip

      - name: Unzip artifacts
        run: unzip -o natives-linux.zip
      - name: Download Artifacts from mac
        if: success() && ${{needs.build-mac.result}} == 'success'
        uses: actions/download-artifact@v4
        with:
          name: natives-mac.zip

      - name: Unzip artifacts
        run: unzip -o natives-mac.zip
      - name: Download Artifacts from windows
        if: success() && ${{needs.build-windows.result}} == 'success'
        uses: actions/download-artifact@v4
        with:
          name: natives-windows.zip

      - name: Unzip artifacts
        run: unzip -o natives-windows.zip

      - name: Fix gradle
        run: chmod +x gradlew

      - name: Package All
        run: ./gradlew jnigenPackageAll
